spring.application.name=order-service
server.port=8081

spring.datasource.url=jdbc:mysql://localhost:23307/order
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# Hibernate Dialect for MySQL 8
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# jwt Secret Key
jwt.secret.key=7Iqk7YyM66W07YOA7L2U65Sp7YG065+9U3ByaW5n6rCV7J2Y7Yqc7YSw7LWc7JuQ67mI7J6F64uI64ukLg==

logging.level.org.springframework.mail=DEBUG
logging.level.org.springframework.boot.autoconfigure.mail=DEBUG

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# swagger
springdoc.api-docs.path=/v1/order-service
springdoc.swagger-ui.path=/swagger-ui.html

# Redis
spring.data.redis.host=redis
spring.data.redis.port=6379

# openfeign config
spring.cloud.openfeign.client.config.default.connect-timeout=160000000
spring.cloud.openfeign.client.config.default.read-timeout=160000000


# HikariCP
spring.datasource.hikari.maximum-pool-size=100
# Maximum pool size: Sets the maximum number of connections that can be used simultaneously to 100
# Increasing this value allows more concurrent connections but can increase the load on the database server.

spring.datasource.hikari.minimum-idle=10
# Minimum idle connections: Maintains at least 10 idle connections in the pool to ensure quick availability.
# If idle connections drop below this value, new connections are created.

spring.datasource.hikari.idle-timeout=30000
# Idle timeout: Removes idle connections from the pool if they are not used for 30 seconds (30000 milliseconds).
# This helps in efficiently managing resources by removing unused connections promptly.

spring.datasource.hikari.connection-timeout=30000
# Connection timeout: Waits for 30 seconds (30000 milliseconds) to obtain a new connection before timing out.
# This prevents waiting indefinitely for a connection and throws a timeout exception if the wait time exceeds this limit.
